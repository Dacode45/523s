
stest:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 20                	add    %ah,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 96 98 d7 20 26    	add    %dl,0x2620d798(%esi)
 804819d:	56                   	push   %esi
 804819e:	d4 26                	aam    $0x26
 80481a0:	34 93                	xor    $0x93,%al
 80481a2:	ab                   	stos   %eax,%es:(%edi)
 80481a3:	20 e1                	and    %ah,%cl
 80481a5:	64 ad                	lods   %fs:(%esi),%eax
 80481a7:	3e aa                	ds stos %al,%es:(%edi)
 80481a9:	4c                   	dec    %esp
 80481aa:	eb e5                	jmp    8048191 <_init-0x13f>

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	04 00                	add    $0x0,%al
 80481b2:	00 00                	add    %al,(%eax)
 80481b4:	01 00                	add    %eax,(%eax)
 80481b6:	00 00                	add    %al,(%eax)
 80481b8:	05 00 00 00 00       	add    $0x0,%eax
 80481bd:	20 00                	and    %al,(%eax)
 80481bf:	20 00                	and    %al,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 04 00             	add    %al,(%eax,%eax,1)
 80481c6:	00 00                	add    %al,(%eax)
 80481c8:	ad                   	lods   %ds:(%esi),%eax
 80481c9:	4b                   	dec    %ebx
 80481ca:	e3 c0                	jecxz  804818c <_init-0x144>

Disassembly of section .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	1a 00                	sbb    (%eax),%al
	...
 80481e6:	00 00                	add    %al,(%eax)
 80481e8:	12 00                	adc    (%eax),%al
 80481ea:	00 00                	add    %al,(%eax)
 80481ec:	3d 00 00 00 00       	cmp    $0x0,%eax
 80481f1:	00 00                	add    %al,(%eax)
 80481f3:	00 00                	add    %al,(%eax)
 80481f5:	00 00                	add    %al,(%eax)
 80481f7:	00 20                	add    %ah,(%eax)
 80481f9:	00 00                	add    %al,(%eax)
 80481fb:	00 2b                	add    %ch,(%ebx)
	...
 8048205:	00 00                	add    %al,(%eax)
 8048207:	00 12                	add    %dl,(%edx)
 8048209:	00 00                	add    %al,(%eax)
 804820b:	00 0b                	add    %cl,(%ebx)
 804820d:	00 00                	add    %al,(%eax)
 804820f:	00 0c 85 04 08 04 00 	add    %cl,0x40804(,%eax,4)
 8048216:	00 00                	add    %al,(%eax)
 8048218:	11 00                	adc    %eax,(%eax)
 804821a:	10 00                	adc    %al,(%eax)

Disassembly of section .dynstr:

0804821c <.dynstr>:
 804821c:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 8048220:	63 2e                	arpl   %bp,(%esi)
 8048222:	73 6f                	jae    8048293 <_init-0x3d>
 8048224:	2e 36 00 5f 49       	cs add %bl,%ss:0x49(%edi)
 8048229:	4f                   	dec    %edi
 804822a:	5f                   	pop    %edi
 804822b:	73 74                	jae    80482a1 <_init-0x2f>
 804822d:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048234:	64 
 8048235:	00 5f 5f             	add    %bl,0x5f(%edi)
 8048238:	73 74                	jae    80482ae <_init-0x22>
 804823a:	61                   	popa   
 804823b:	63 6b 5f             	arpl   %bp,0x5f(%ebx)
 804823e:	63 68 6b             	arpl   %bp,0x6b(%eax)
 8048241:	5f                   	pop    %edi
 8048242:	66 61                	popaw  
 8048244:	69 6c 00 5f 5f 6c 69 	imul   $0x62696c5f,0x5f(%eax,%eax,1),%ebp
 804824b:	62 
 804824c:	63 5f 73             	arpl   %bx,0x73(%edi)
 804824f:	74 61                	je     80482b2 <_init-0x1e>
 8048251:	72 74                	jb     80482c7 <_init-0x9>
 8048253:	5f                   	pop    %edi
 8048254:	6d                   	insl   (%dx),%es:(%edi)
 8048255:	61                   	popa   
 8048256:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%esi),%ebp
 804825d:	6f                   	outsl  %ds:(%esi),(%dx)
 804825e:	6e                   	outsb  %ds:(%esi),(%dx)
 804825f:	5f                   	pop    %edi
 8048260:	73 74                	jae    80482d6 <_init+0x6>
 8048262:	61                   	popa   
 8048263:	72 74                	jb     80482d9 <_init+0x9>
 8048265:	5f                   	pop    %edi
 8048266:	5f                   	pop    %edi
 8048267:	00 47 4c             	add    %al,0x4c(%edi)
 804826a:	49                   	dec    %ecx
 804826b:	42                   	inc    %edx
 804826c:	43                   	inc    %ebx
 804826d:	5f                   	pop    %edi
 804826e:	32 2e                	xor    (%esi),%ch
 8048270:	30 00                	xor    %al,(%eax)
 8048272:	47                   	inc    %edi
 8048273:	4c                   	dec    %esp
 8048274:	49                   	dec    %ecx
 8048275:	42                   	inc    %edx
 8048276:	43                   	inc    %ebx
 8048277:	5f                   	pop    %edi
 8048278:	32 2e                	xor    (%esi),%ch
 804827a:	34 00                	xor    $0x0,%al

Disassembly of section .gnu.version:

0804827c <.gnu.version>:
 804827c:	00 00                	add    %al,(%eax)
 804827e:	02 00                	add    (%eax),%al
 8048280:	00 00                	add    %al,(%eax)
 8048282:	03 00                	add    (%eax),%eax
 8048284:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

08048288 <.gnu.version_r>:
 8048288:	01 00                	add    %eax,(%eax)
 804828a:	02 00                	add    (%eax),%al
 804828c:	01 00                	add    %eax,(%eax)
 804828e:	00 00                	add    %al,(%eax)
 8048290:	10 00                	adc    %al,(%eax)
 8048292:	00 00                	add    %al,(%eax)
 8048294:	00 00                	add    %al,(%eax)
 8048296:	00 00                	add    %al,(%eax)
 8048298:	10 69 69             	adc    %ch,0x69(%ecx)
 804829b:	0d 00 00 03 00       	or     $0x30000,%eax
 80482a0:	4c                   	dec    %esp
 80482a1:	00 00                	add    %al,(%eax)
 80482a3:	00 10                	add    %dl,(%eax)
 80482a5:	00 00                	add    %al,(%eax)
 80482a7:	00 14 69             	add    %dl,(%ecx,%ebp,2)
 80482aa:	69 0d 00 00 02 00 56 	imul   $0x56,0x20000,%ecx
 80482b1:	00 00 00 
 80482b4:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

080482b8 <.rel.dyn>:
 80482b8:	fc                   	cld    
 80482b9:	9f                   	lahf   
 80482ba:	04 08                	add    $0x8,%al
 80482bc:	06                   	push   %es
 80482bd:	02 00                	add    (%eax),%al
	...

Disassembly of section .rel.plt:

080482c0 <.rel.plt>:
 80482c0:	0c a0                	or     $0xa0,%al
 80482c2:	04 08                	add    $0x8,%al
 80482c4:	07                   	pop    %es
 80482c5:	01 00                	add    %eax,(%eax)
 80482c7:	00 10                	add    %dl,(%eax)
 80482c9:	a0 04 08 07 03       	mov    0x3070804,%al
	...

Disassembly of section .init:

080482d0 <_init>:
 80482d0:	53                   	push   %ebx
 80482d1:	83 ec 08             	sub    $0x8,%esp
 80482d4:	e8 97 00 00 00       	call   8048370 <__x86.get_pc_thunk.bx>
 80482d9:	81 c3 27 1d 00 00    	add    $0x1d27,%ebx
 80482df:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80482e5:	85 c0                	test   %eax,%eax
 80482e7:	74 05                	je     80482ee <_init+0x1e>
 80482e9:	e8 42 00 00 00       	call   8048330 <__libc_start_main@plt+0x10>
 80482ee:	83 c4 08             	add    $0x8,%esp
 80482f1:	5b                   	pop    %ebx
 80482f2:	c3                   	ret    

Disassembly of section .plt:

08048300 <__stack_chk_fail@plt-0x10>:
 8048300:	ff 35 04 a0 04 08    	pushl  0x804a004
 8048306:	ff 25 08 a0 04 08    	jmp    *0x804a008
 804830c:	00 00                	add    %al,(%eax)
	...

08048310 <__stack_chk_fail@plt>:
 8048310:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048316:	68 00 00 00 00       	push   $0x0
 804831b:	e9 e0 ff ff ff       	jmp    8048300 <_init+0x30>

08048320 <__libc_start_main@plt>:
 8048320:	ff 25 10 a0 04 08    	jmp    *0x804a010
 8048326:	68 08 00 00 00       	push   $0x8
 804832b:	e9 d0 ff ff ff       	jmp    8048300 <_init+0x30>

Disassembly of section .plt.got:

08048330 <.plt.got>:
 8048330:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 8048336:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

08048340 <_start>:
 8048340:	31 ed                	xor    %ebp,%ebp
 8048342:	5e                   	pop    %esi
 8048343:	89 e1                	mov    %esp,%ecx
 8048345:	83 e4 f0             	and    $0xfffffff0,%esp
 8048348:	50                   	push   %eax
 8048349:	54                   	push   %esp
 804834a:	52                   	push   %edx
 804834b:	68 f0 84 04 08       	push   $0x80484f0
 8048350:	68 90 84 04 08       	push   $0x8048490
 8048355:	51                   	push   %ecx
 8048356:	56                   	push   %esi
 8048357:	68 3b 84 04 08       	push   $0x804843b
 804835c:	e8 bf ff ff ff       	call   8048320 <__libc_start_main@plt>
 8048361:	f4                   	hlt    
 8048362:	66 90                	xchg   %ax,%ax
 8048364:	66 90                	xchg   %ax,%ax
 8048366:	66 90                	xchg   %ax,%ax
 8048368:	66 90                	xchg   %ax,%ax
 804836a:	66 90                	xchg   %ax,%ax
 804836c:	66 90                	xchg   %ax,%ax
 804836e:	66 90                	xchg   %ax,%ax

08048370 <__x86.get_pc_thunk.bx>:
 8048370:	8b 1c 24             	mov    (%esp),%ebx
 8048373:	c3                   	ret    
 8048374:	66 90                	xchg   %ax,%ax
 8048376:	66 90                	xchg   %ax,%ax
 8048378:	66 90                	xchg   %ax,%ax
 804837a:	66 90                	xchg   %ax,%ax
 804837c:	66 90                	xchg   %ax,%ax
 804837e:	66 90                	xchg   %ax,%ax

08048380 <deregister_tm_clones>:
 8048380:	b8 3b a0 04 08       	mov    $0x804a03b,%eax
 8048385:	2d 38 a0 04 08       	sub    $0x804a038,%eax
 804838a:	83 f8 06             	cmp    $0x6,%eax
 804838d:	76 1a                	jbe    80483a9 <deregister_tm_clones+0x29>
 804838f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048394:	85 c0                	test   %eax,%eax
 8048396:	74 11                	je     80483a9 <deregister_tm_clones+0x29>
 8048398:	55                   	push   %ebp
 8048399:	89 e5                	mov    %esp,%ebp
 804839b:	83 ec 14             	sub    $0x14,%esp
 804839e:	68 38 a0 04 08       	push   $0x804a038
 80483a3:	ff d0                	call   *%eax
 80483a5:	83 c4 10             	add    $0x10,%esp
 80483a8:	c9                   	leave  
 80483a9:	f3 c3                	repz ret 
 80483ab:	90                   	nop
 80483ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

080483b0 <register_tm_clones>:
 80483b0:	b8 38 a0 04 08       	mov    $0x804a038,%eax
 80483b5:	2d 38 a0 04 08       	sub    $0x804a038,%eax
 80483ba:	c1 f8 02             	sar    $0x2,%eax
 80483bd:	89 c2                	mov    %eax,%edx
 80483bf:	c1 ea 1f             	shr    $0x1f,%edx
 80483c2:	01 d0                	add    %edx,%eax
 80483c4:	d1 f8                	sar    %eax
 80483c6:	74 1b                	je     80483e3 <register_tm_clones+0x33>
 80483c8:	ba 00 00 00 00       	mov    $0x0,%edx
 80483cd:	85 d2                	test   %edx,%edx
 80483cf:	74 12                	je     80483e3 <register_tm_clones+0x33>
 80483d1:	55                   	push   %ebp
 80483d2:	89 e5                	mov    %esp,%ebp
 80483d4:	83 ec 10             	sub    $0x10,%esp
 80483d7:	50                   	push   %eax
 80483d8:	68 38 a0 04 08       	push   $0x804a038
 80483dd:	ff d2                	call   *%edx
 80483df:	83 c4 10             	add    $0x10,%esp
 80483e2:	c9                   	leave  
 80483e3:	f3 c3                	repz ret 
 80483e5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80483e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080483f0 <__do_global_dtors_aux>:
 80483f0:	80 3d 36 a0 04 08 00 	cmpb   $0x0,0x804a036
 80483f7:	75 13                	jne    804840c <__do_global_dtors_aux+0x1c>
 80483f9:	55                   	push   %ebp
 80483fa:	89 e5                	mov    %esp,%ebp
 80483fc:	83 ec 08             	sub    $0x8,%esp
 80483ff:	e8 7c ff ff ff       	call   8048380 <deregister_tm_clones>
 8048404:	c6 05 36 a0 04 08 01 	movb   $0x1,0x804a036
 804840b:	c9                   	leave  
 804840c:	f3 c3                	repz ret 
 804840e:	66 90                	xchg   %ax,%ax

08048410 <frame_dummy>:
 8048410:	b8 10 9f 04 08       	mov    $0x8049f10,%eax
 8048415:	8b 10                	mov    (%eax),%edx
 8048417:	85 d2                	test   %edx,%edx
 8048419:	75 05                	jne    8048420 <frame_dummy+0x10>
 804841b:	eb 93                	jmp    80483b0 <register_tm_clones>
 804841d:	8d 76 00             	lea    0x0(%esi),%esi
 8048420:	ba 00 00 00 00       	mov    $0x0,%edx
 8048425:	85 d2                	test   %edx,%edx
 8048427:	74 f2                	je     804841b <frame_dummy+0xb>
 8048429:	55                   	push   %ebp
 804842a:	89 e5                	mov    %esp,%ebp
 804842c:	83 ec 14             	sub    $0x14,%esp
 804842f:	50                   	push   %eax
 8048430:	ff d2                	call   *%edx
 8048432:	83 c4 10             	add    $0x10,%esp
 8048435:	c9                   	leave  
 8048436:	e9 75 ff ff ff       	jmp    80483b0 <register_tm_clones>

0804843b <main>:
 804843b:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 804843f:	83 e4 f0             	and    $0xfffffff0,%esp
 8048442:	ff 71 fc             	pushl  -0x4(%ecx)
 8048445:	55                   	push   %ebp
 8048446:	89 e5                	mov    %esp,%ebp
 8048448:	51                   	push   %ecx
 8048449:	83 ec 14             	sub    $0x14,%esp
 804844c:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048452:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048455:	31 c0                	xor    %eax,%eax
 8048457:	8d 45 f0             	lea    -0x10(%ebp),%eax
 804845a:	83 c0 08             	add    $0x8,%eax
 804845d:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8048460:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048463:	ba 1c a0 04 08       	mov    $0x804a01c,%edx
 8048468:	89 10                	mov    %edx,(%eax)
 804846a:	b8 00 00 00 00       	mov    $0x0,%eax
 804846f:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8048472:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8048479:	74 05                	je     8048480 <main+0x45>
 804847b:	e8 90 fe ff ff       	call   8048310 <__stack_chk_fail@plt>
 8048480:	83 c4 14             	add    $0x14,%esp
 8048483:	59                   	pop    %ecx
 8048484:	5d                   	pop    %ebp
 8048485:	8d 61 fc             	lea    -0x4(%ecx),%esp
 8048488:	c3                   	ret    
 8048489:	66 90                	xchg   %ax,%ax
 804848b:	66 90                	xchg   %ax,%ax
 804848d:	66 90                	xchg   %ax,%ax
 804848f:	90                   	nop

08048490 <__libc_csu_init>:
 8048490:	55                   	push   %ebp
 8048491:	57                   	push   %edi
 8048492:	56                   	push   %esi
 8048493:	53                   	push   %ebx
 8048494:	e8 d7 fe ff ff       	call   8048370 <__x86.get_pc_thunk.bx>
 8048499:	81 c3 67 1b 00 00    	add    $0x1b67,%ebx
 804849f:	83 ec 0c             	sub    $0xc,%esp
 80484a2:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 80484a6:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 80484ac:	e8 1f fe ff ff       	call   80482d0 <_init>
 80484b1:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 80484b7:	29 c6                	sub    %eax,%esi
 80484b9:	c1 fe 02             	sar    $0x2,%esi
 80484bc:	85 f6                	test   %esi,%esi
 80484be:	74 25                	je     80484e5 <__libc_csu_init+0x55>
 80484c0:	31 ff                	xor    %edi,%edi
 80484c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80484c8:	83 ec 04             	sub    $0x4,%esp
 80484cb:	ff 74 24 2c          	pushl  0x2c(%esp)
 80484cf:	ff 74 24 2c          	pushl  0x2c(%esp)
 80484d3:	55                   	push   %ebp
 80484d4:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 80484db:	83 c7 01             	add    $0x1,%edi
 80484de:	83 c4 10             	add    $0x10,%esp
 80484e1:	39 f7                	cmp    %esi,%edi
 80484e3:	75 e3                	jne    80484c8 <__libc_csu_init+0x38>
 80484e5:	83 c4 0c             	add    $0xc,%esp
 80484e8:	5b                   	pop    %ebx
 80484e9:	5e                   	pop    %esi
 80484ea:	5f                   	pop    %edi
 80484eb:	5d                   	pop    %ebp
 80484ec:	c3                   	ret    
 80484ed:	8d 76 00             	lea    0x0(%esi),%esi

080484f0 <__libc_csu_fini>:
 80484f0:	f3 c3                	repz ret 

Disassembly of section .fini:

080484f4 <_fini>:
 80484f4:	53                   	push   %ebx
 80484f5:	83 ec 08             	sub    $0x8,%esp
 80484f8:	e8 73 fe ff ff       	call   8048370 <__x86.get_pc_thunk.bx>
 80484fd:	81 c3 03 1b 00 00    	add    $0x1b03,%ebx
 8048503:	83 c4 08             	add    $0x8,%esp
 8048506:	5b                   	pop    %ebx
 8048507:	c3                   	ret    

Disassembly of section .rodata:

08048508 <_fp_hw>:
 8048508:	03 00                	add    (%eax),%eax
	...

0804850c <_IO_stdin_used>:
 804850c:	01 00                	add    %eax,(%eax)
 804850e:	02 00                	add    (%eax),%al

Disassembly of section .eh_frame_hdr:

08048510 <__GNU_EH_FRAME_HDR>:
 8048510:	01 1b                	add    %ebx,(%ebx)
 8048512:	03 3b                	add    (%ebx),%edi
 8048514:	28 00                	sub    %al,(%eax)
 8048516:	00 00                	add    %al,(%eax)
 8048518:	04 00                	add    $0x0,%al
 804851a:	00 00                	add    %al,(%eax)
 804851c:	f0 fd                	lock std 
 804851e:	ff                   	(bad)  
 804851f:	ff 44 00 00          	incl   0x0(%eax,%eax,1)
 8048523:	00 2b                	add    %ch,(%ebx)
 8048525:	ff                   	(bad)  
 8048526:	ff                   	(bad)  
 8048527:	ff 68 00             	ljmp   *0x0(%eax)
 804852a:	00 00                	add    %al,(%eax)
 804852c:	80 ff ff             	cmp    $0xff,%bh
 804852f:	ff 94 00 00 00 e0 ff 	call   *-0x200000(%eax,%eax,1)
 8048536:	ff                   	(bad)  
 8048537:	ff e0                	jmp    *%eax
 8048539:	00 00                	add    %al,(%eax)
	...

Disassembly of section .eh_frame:

0804853c <__FRAME_END__-0xc8>:
 804853c:	14 00                	adc    $0x0,%al
 804853e:	00 00                	add    %al,(%eax)
 8048540:	00 00                	add    %al,(%eax)
 8048542:	00 00                	add    %al,(%eax)
 8048544:	01 7a 52             	add    %edi,0x52(%edx)
 8048547:	00 01                	add    %al,(%ecx)
 8048549:	7c 08                	jl     8048553 <__GNU_EH_FRAME_HDR+0x43>
 804854b:	01 1b                	add    %ebx,(%ebx)
 804854d:	0c 04                	or     $0x4,%al
 804854f:	04 88                	add    $0x88,%al
 8048551:	01 00                	add    %eax,(%eax)
 8048553:	00 20                	add    %ah,(%eax)
 8048555:	00 00                	add    %al,(%eax)
 8048557:	00 1c 00             	add    %bl,(%eax,%eax,1)
 804855a:	00 00                	add    %al,(%eax)
 804855c:	a4                   	movsb  %ds:(%esi),%es:(%edi)
 804855d:	fd                   	std    
 804855e:	ff                   	(bad)  
 804855f:	ff 30                	pushl  (%eax)
 8048561:	00 00                	add    %al,(%eax)
 8048563:	00 00                	add    %al,(%eax)
 8048565:	0e                   	push   %cs
 8048566:	08 46 0e             	or     %al,0xe(%esi)
 8048569:	0c 4a                	or     $0x4a,%al
 804856b:	0f 0b                	ud2    
 804856d:	74 04                	je     8048573 <__GNU_EH_FRAME_HDR+0x63>
 804856f:	78 00                	js     8048571 <__GNU_EH_FRAME_HDR+0x61>
 8048571:	3f                   	aas    
 8048572:	1a 3b                	sbb    (%ebx),%bh
 8048574:	2a 32                	sub    (%edx),%dh
 8048576:	24 22                	and    $0x22,%al
 8048578:	28 00                	sub    %al,(%eax)
 804857a:	00 00                	add    %al,(%eax)
 804857c:	40                   	inc    %eax
 804857d:	00 00                	add    %al,(%eax)
 804857f:	00 bb fe ff ff 4e    	add    %bh,0x4efffffe(%ebx)
 8048585:	00 00                	add    %al,(%eax)
 8048587:	00 00                	add    %al,(%eax)
 8048589:	44                   	inc    %esp
 804858a:	0c 01                	or     $0x1,%al
 804858c:	00 47 10             	add    %al,0x10(%edi)
 804858f:	05 02 75 00 43       	add    $0x43007502,%eax
 8048594:	0f 03 75 7c          	lsl    0x7c(%ebp),%esi
 8048598:	06                   	push   %es
 8048599:	7b c1                	jnp    804855c <__GNU_EH_FRAME_HDR+0x4c>
 804859b:	0c 01                	or     $0x1,%al
 804859d:	00 41 c5             	add    %al,-0x3b(%ecx)
 80485a0:	43                   	inc    %ebx
 80485a1:	0c 04                	or     $0x4,%al
 80485a3:	04 48                	add    $0x48,%al
 80485a5:	00 00                	add    %al,(%eax)
 80485a7:	00 6c 00 00          	add    %ch,0x0(%eax,%eax,1)
 80485ab:	00 e4                	add    %ah,%ah
 80485ad:	fe                   	(bad)  
 80485ae:	ff                   	(bad)  
 80485af:	ff 5d 00             	lcall  *0x0(%ebp)
 80485b2:	00 00                	add    %al,(%eax)
 80485b4:	00 41 0e             	add    %al,0xe(%ecx)
 80485b7:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 80485bd:	87 03                	xchg   %eax,(%ebx)
 80485bf:	41                   	inc    %ecx
 80485c0:	0e                   	push   %cs
 80485c1:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 80485c7:	83 05 4e 0e 20 69 0e 	addl   $0xe,0x69200e4e
 80485ce:	24 44                	and    $0x44,%al
 80485d0:	0e                   	push   %cs
 80485d1:	28 44 0e 2c          	sub    %al,0x2c(%esi,%ecx,1)
 80485d5:	41                   	inc    %ecx
 80485d6:	0e                   	push   %cs
 80485d7:	30 4d 0e             	xor    %cl,0xe(%ebp)
 80485da:	20 47 0e             	and    %al,0xe(%edi)
 80485dd:	14 41                	adc    $0x41,%al
 80485df:	c3                   	ret    
 80485e0:	0e                   	push   %cs
 80485e1:	10 41 c6             	adc    %al,-0x3a(%ecx)
 80485e4:	0e                   	push   %cs
 80485e5:	0c 41                	or     $0x41,%al
 80485e7:	c7                   	(bad)  
 80485e8:	0e                   	push   %cs
 80485e9:	08 41 c5             	or     %al,-0x3b(%ecx)
 80485ec:	0e                   	push   %cs
 80485ed:	04 00                	add    $0x0,%al
 80485ef:	00 10                	add    %dl,(%eax)
 80485f1:	00 00                	add    %al,(%eax)
 80485f3:	00 b8 00 00 00 f8    	add    %bh,-0x8000000(%eax)
 80485f9:	fe                   	(bad)  
 80485fa:	ff                   	(bad)  
 80485fb:	ff 02                	incl   (%edx)
 80485fd:	00 00                	add    %al,(%eax)
 80485ff:	00 00                	add    %al,(%eax)
 8048601:	00 00                	add    %al,(%eax)
	...

08048604 <__FRAME_END__>:
 8048604:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

08049f08 <__frame_dummy_init_array_entry>:
 8049f08:	10                   	.byte 0x10
 8049f09:	84 04 08             	test   %al,(%eax,%ecx,1)

Disassembly of section .fini_array:

08049f0c <__do_global_dtors_aux_fini_array_entry>:
 8049f0c:	f0                   	lock
 8049f0d:	83                   	.byte 0x83
 8049f0e:	04 08                	add    $0x8,%al

Disassembly of section .jcr:

08049f10 <__JCR_END__>:
 8049f10:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049f14 <_DYNAMIC>:
 8049f14:	01 00                	add    %eax,(%eax)
 8049f16:	00 00                	add    %al,(%eax)
 8049f18:	01 00                	add    %eax,(%eax)
 8049f1a:	00 00                	add    %al,(%eax)
 8049f1c:	0c 00                	or     $0x0,%al
 8049f1e:	00 00                	add    %al,(%eax)
 8049f20:	d0 82 04 08 0d 00    	rolb   0xd0804(%edx)
 8049f26:	00 00                	add    %al,(%eax)
 8049f28:	f4                   	hlt    
 8049f29:	84 04 08             	test   %al,(%eax,%ecx,1)
 8049f2c:	19 00                	sbb    %eax,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	08 9f 04 08 1b 00    	or     %bl,0x1b0804(%edi)
 8049f36:	00 00                	add    %al,(%eax)
 8049f38:	04 00                	add    $0x0,%al
 8049f3a:	00 00                	add    %al,(%eax)
 8049f3c:	1a 00                	sbb    (%eax),%al
 8049f3e:	00 00                	add    %al,(%eax)
 8049f40:	0c 9f                	or     $0x9f,%al
 8049f42:	04 08                	add    $0x8,%al
 8049f44:	1c 00                	sbb    $0x0,%al
 8049f46:	00 00                	add    %al,(%eax)
 8049f48:	04 00                	add    $0x0,%al
 8049f4a:	00 00                	add    %al,(%eax)
 8049f4c:	f5                   	cmc    
 8049f4d:	fe                   	(bad)  
 8049f4e:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f51:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f58:	1c 82                	sbb    $0x82,%al
 8049f5a:	04 08                	add    $0x8,%al
 8049f5c:	06                   	push   %es
 8049f5d:	00 00                	add    %al,(%eax)
 8049f5f:	00 cc                	add    %cl,%ah
 8049f61:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f68:	60                   	pusha  
 8049f69:	00 00                	add    %al,(%eax)
 8049f6b:	00 0b                	add    %cl,(%ebx)
 8049f6d:	00 00                	add    %al,(%eax)
 8049f6f:	00 10                	add    %dl,(%eax)
 8049f71:	00 00                	add    %al,(%eax)
 8049f73:	00 15 00 00 00 00    	add    %dl,0x0
 8049f79:	00 00                	add    %al,(%eax)
 8049f7b:	00 03                	add    %al,(%ebx)
 8049f7d:	00 00                	add    %al,(%eax)
 8049f7f:	00 00                	add    %al,(%eax)
 8049f81:	a0 04 08 02 00       	mov    0x20804,%al
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	10 00                	adc    %al,(%eax)
 8049f8a:	00 00                	add    %al,(%eax)
 8049f8c:	14 00                	adc    $0x0,%al
 8049f8e:	00 00                	add    %al,(%eax)
 8049f90:	11 00                	adc    %eax,(%eax)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	17                   	pop    %ss
 8049f95:	00 00                	add    %al,(%eax)
 8049f97:	00 c0                	add    %al,%al
 8049f99:	82                   	(bad)  
 8049f9a:	04 08                	add    $0x8,%al
 8049f9c:	11 00                	adc    %eax,(%eax)
 8049f9e:	00 00                	add    %al,(%eax)
 8049fa0:	b8 82 04 08 12       	mov    $0x12080482,%eax
 8049fa5:	00 00                	add    %al,(%eax)
 8049fa7:	00 08                	add    %cl,(%eax)
 8049fa9:	00 00                	add    %al,(%eax)
 8049fab:	00 13                	add    %dl,(%ebx)
 8049fad:	00 00                	add    %al,(%eax)
 8049faf:	00 08                	add    %cl,(%eax)
 8049fb1:	00 00                	add    %al,(%eax)
 8049fb3:	00 fe                	add    %bh,%dh
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f 88             	ljmp   *-0x78(%edi)
 8049fb9:	82                   	(bad)  
 8049fba:	04 08                	add    $0x8,%al
 8049fbc:	ff                   	(bad)  
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fc1:	00 00                	add    %al,(%eax)
 8049fc3:	00 f0                	add    %dh,%al
 8049fc5:	ff                   	(bad)  
 8049fc6:	ff 6f 7c             	ljmp   *0x7c(%edi)
 8049fc9:	82                   	(bad)  
 8049fca:	04 08                	add    $0x8,%al
	...

Disassembly of section .got:

08049ffc <.got>:
 8049ffc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	14 9f                	adc    $0x9f,%al
 804a002:	04 08                	add    $0x8,%al
	...
 804a00c:	16                   	push   %ss
 804a00d:	83 04 08 26          	addl   $0x26,(%eax,%ecx,1)
 804a011:	83                   	.byte 0x83
 804a012:	04 08                	add    $0x8,%al

Disassembly of section .data:

0804a014 <__data_start>:
 804a014:	00 00                	add    %al,(%eax)
	...

0804a018 <__dso_handle>:
 804a018:	00 00                	add    %al,(%eax)
	...

0804a01c <sc1>:
 804a01c:	31 c0                	xor    %eax,%eax
 804a01e:	50                   	push   %eax
 804a01f:	68 2f 2f 73 68       	push   $0x68732f2f
 804a024:	68 2f 62 69 6e       	push   $0x6e69622f
 804a029:	89 e3                	mov    %esp,%ebx
 804a02b:	50                   	push   %eax
 804a02c:	89 e2                	mov    %esp,%edx
 804a02e:	53                   	push   %ebx
 804a02f:	89 e1                	mov    %esp,%ecx
 804a031:	b0 0b                	mov    $0xb,%al
 804a033:	cd 80                	int    $0x80
	...

Disassembly of section .bss:

0804a036 <__bss_start>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x8048258>
   a:	74 75                	je     81 <_init-0x804824f>
   c:	20 35 2e 34 2e 30    	and    %dh,0x302e342e
  12:	2d 36 75 62 75       	sub    $0x75627536,%eax
  17:	6e                   	outsb  %ds:(%esi),(%dx)
  18:	74 75                	je     8f <_init-0x8048241>
  1a:	31 7e 31             	xor    %edi,0x31(%esi)
  1d:	36 2e 30 34 2e       	ss xor %dh,%cs:(%esi,%ebp,1)
  22:	32 29                	xor    (%ecx),%ch
  24:	20 35 2e 34 2e 30    	and    %dh,0x302e342e
  2a:	20 32                	and    %dh,(%edx)
  2c:	30 31                	xor    %dh,(%ecx)
  2e:	36 30 36             	xor    %dh,%ss:(%esi)
  31:	30 39                	xor    %bh,(%ecx)
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	1c 00                	sbb    $0x0,%al
   2:	00 00                	add    %al,(%eax)
   4:	02 00                	add    (%eax),%al
   6:	00 00                	add    %al,(%eax)
   8:	00 00                	add    %al,(%eax)
   a:	04 00                	add    $0x0,%al
   c:	00 00                	add    %al,(%eax)
   e:	00 00                	add    %al,(%eax)
  10:	3b 84 04 08 4e 00 00 	cmp    0x4e08(%esp,%eax,1),%eax
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	c5 00                	lds    (%eax),%eax
   2:	00 00                	add    %al,(%eax)
   4:	04 00                	add    $0x0,%al
   6:	00 00                	add    %al,(%eax)
   8:	00 00                	add    %al,(%eax)
   a:	04 01                	add    $0x1,%al
   c:	7c 00                	jl     e <_init-0x80482c2>
   e:	00 00                	add    %al,(%eax)
  10:	0c 0e                	or     $0xe,%al
  12:	00 00                	add    %al,(%eax)
  14:	00 40 00             	add    %al,0x0(%eax)
  17:	00 00                	add    %al,(%eax)
  19:	3b 84 04 08 4e 00 00 	cmp    0x4e08(%esp,%eax,1),%eax
  20:	00 00                	add    %al,(%eax)
  22:	00 00                	add    %al,(%eax)
  24:	00 02                	add    %al,(%edx)
  26:	04 07                	add    $0x7,%al
  28:	33 00                	xor    (%eax),%eax
  2a:	00 00                	add    %al,(%eax)
  2c:	02 04 05 05 00 00 00 	add    0x5(,%eax,1),%al
  33:	02 01                	add    (%ecx),%al
  35:	08 16                	or     %dl,(%esi)
  37:	00 00                	add    %al,(%eax)
  39:	00 02                	add    %al,(%edx)
  3b:	02 07                	add    (%edi),%al
  3d:	69 00 00 00 02 04    	imul   $0x4020000,(%eax),%eax
  43:	07                   	pop    %es
  44:	2e 00 00             	add    %al,%cs:(%eax)
  47:	00 02                	add    %al,(%edx)
  49:	01 06                	add    %eax,(%esi)
  4b:	18 00                	sbb    %al,(%eax)
  4d:	00 00                	add    %al,(%eax)
  4f:	02 02                	add    (%edx),%al
  51:	05 cf 00 00 00       	add    $0xcf,%eax
  56:	03 04 05 69 6e 74 00 	add    0x746e69(,%eax,1),%eax
  5d:	02 08                	add    (%eax),%cl
  5f:	05 00 00 00 00       	add    $0x0,%eax
  64:	02 08                	add    (%eax),%cl
  66:	07                   	pop    %es
  67:	29 00                	sub    %eax,(%eax)
  69:	00 00                	add    %al,(%eax)
  6b:	02 04 07             	add    (%edi,%eax,1),%al
  6e:	d9 00                	flds   (%eax)
  70:	00 00                	add    %al,(%eax)
  72:	02 01                	add    (%ecx),%al
  74:	06                   	push   %es
  75:	1f                   	pop    %ds
  76:	00 00                	add    %al,(%eax)
  78:	00 04 04             	add    %al,(%esp,%eax,1)
  7b:	56                   	push   %esi
  7c:	00 00                	add    %al,(%eax)
  7e:	00 05 24 00 00 00    	add    %al,0x24
  84:	01 08                	add    %ecx,(%eax)
  86:	56                   	push   %esi
  87:	00 00                	add    %al,(%eax)
  89:	00 3b                	add    %bh,(%ebx)
  8b:	84 04 08             	test   %al,(%eax,%ecx,1)
  8e:	4e                   	dec    %esi
  8f:	00 00                	add    %al,(%eax)
  91:	00 01                	add    %al,(%ecx)
  93:	9c                   	pushf  
  94:	a7                   	cmpsl  %es:(%edi),%ds:(%esi)
  95:	00 00                	add    %al,(%eax)
  97:	00 06                	add    %al,(%esi)
  99:	72 65                	jb     100 <_init-0x80481d0>
  9b:	74 00                	je     9d <_init-0x8048233>
  9d:	01 0a                	add    %ecx,(%edx)
  9f:	79 00                	jns    a1 <_init-0x804822f>
  a1:	00 00                	add    %al,(%eax)
  a3:	02 75 70             	add    0x70(%ebp),%dh
  a6:	00 07                	add    %al,(%edi)
  a8:	72 00                	jb     aa <_init-0x8048226>
  aa:	00 00                	add    %al,(%eax)
  ac:	b7 00                	mov    $0x0,%bh
  ae:	00 00                	add    %al,(%eax)
  b0:	08 6b 00             	or     %ch,0x0(%ebx)
  b3:	00 00                	add    %al,(%eax)
  b5:	19 00                	sbb    %eax,(%eax)
  b7:	09 73 63             	or     %esi,0x63(%ebx)
  ba:	31 00                	xor    %eax,(%eax)
  bc:	01 05 a7 00 00 00    	add    %eax,0xa7
  c2:	05 03 1c a0 04       	add    $0x4a01c03,%eax
  c7:	08 00                	or     %al,(%eax)

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%ecx)
   2:	01 25 0e 13 0b 03    	add    %esp,0x30b130e
   8:	0e                   	push   %cs
   9:	1b 0e                	sbb    (%esi),%ecx
   b:	11 01                	adc    %eax,(%ecx)
   d:	12 06                	adc    (%esi),%al
   f:	10 17                	adc    %dl,(%edi)
  11:	00 00                	add    %al,(%eax)
  13:	02 24 00             	add    (%eax,%eax,1),%ah
  16:	0b 0b                	or     (%ebx),%ecx
  18:	3e 0b 03             	or     %ds:(%ebx),%eax
  1b:	0e                   	push   %cs
  1c:	00 00                	add    %al,(%eax)
  1e:	03 24 00             	add    (%eax,%eax,1),%esp
  21:	0b 0b                	or     (%ebx),%ecx
  23:	3e 0b 03             	or     %ds:(%ebx),%eax
  26:	08 00                	or     %al,(%eax)
  28:	00 04 0f             	add    %al,(%edi,%ecx,1)
  2b:	00 0b                	add    %cl,(%ebx)
  2d:	0b 49 13             	or     0x13(%ecx),%ecx
  30:	00 00                	add    %al,(%eax)
  32:	05 2e 01 3f 19       	add    $0x193f012e,%eax
  37:	03 0e                	add    (%esi),%ecx
  39:	3a 0b                	cmp    (%ebx),%cl
  3b:	3b 0b                	cmp    (%ebx),%ecx
  3d:	49                   	dec    %ecx
  3e:	13 11                	adc    (%ecx),%edx
  40:	01 12                	add    %edx,(%edx)
  42:	06                   	push   %es
  43:	40                   	inc    %eax
  44:	18 96 42 19 01 13    	sbb    %dl,0x13011942(%esi)
  4a:	00 00                	add    %al,(%eax)
  4c:	06                   	push   %es
  4d:	34 00                	xor    $0x0,%al
  4f:	03 08                	add    (%eax),%ecx
  51:	3a 0b                	cmp    (%ebx),%cl
  53:	3b 0b                	cmp    (%ebx),%ecx
  55:	49                   	dec    %ecx
  56:	13 02                	adc    (%edx),%eax
  58:	18 00                	sbb    %al,(%eax)
  5a:	00 07                	add    %al,(%edi)
  5c:	01 01                	add    %eax,(%ecx)
  5e:	49                   	dec    %ecx
  5f:	13 01                	adc    (%ecx),%eax
  61:	13 00                	adc    (%eax),%eax
  63:	00 08                	add    %cl,(%eax)
  65:	21 00                	and    %eax,(%eax)
  67:	49                   	dec    %ecx
  68:	13 2f                	adc    (%edi),%ebp
  6a:	0b 00                	or     (%eax),%eax
  6c:	00 09                	add    %cl,(%ecx)
  6e:	34 00                	xor    $0x0,%al
  70:	03 08                	add    (%eax),%ecx
  72:	3a 0b                	cmp    (%ebx),%cl
  74:	3b 0b                	cmp    (%ebx),%ecx
  76:	49                   	dec    %ecx
  77:	13 3f                	adc    (%edi),%edi
  79:	19 02                	sbb    %eax,(%edx)
  7b:	18 00                	sbb    %al,(%eax)
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	36 00 00             	add    %al,%ss:(%eax)
   3:	00 02                	add    %al,(%edx)
   5:	00 1e                	add    %bl,(%esi)
   7:	00 00                	add    %al,(%eax)
   9:	00 01                	add    %al,(%ecx)
   b:	01 fb                	add    %edi,%ebx
   d:	0e                   	push   %cs
   e:	0d 00 01 01 01       	or     $0x1010100,%eax
  13:	01 00                	add    %eax,(%eax)
  15:	00 00                	add    %al,(%eax)
  17:	01 00                	add    %eax,(%eax)
  19:	00 01                	add    %al,(%ecx)
  1b:	00 73 74             	add    %dh,0x74(%ebx)
  1e:	65 73 74             	gs jae 95 <_init-0x804823b>
  21:	2e 63 00             	arpl   %ax,%cs:(%eax)
  24:	00 00                	add    %al,(%eax)
  26:	00 00                	add    %al,(%eax)
  28:	00 05 02 3b 84 04    	add    %al,0x4843b02
  2e:	08 1a                	or     %bl,(%edx)
  30:	08 12                	or     %dl,(%edx)
  32:	ae                   	scas   %es:(%edi),%al
  33:	91                   	xchg   %eax,%ecx
  34:	e5 02                	in     $0x2,%eax
  36:	1a 00                	sbb    (%eax),%al
  38:	01 01                	add    %eax,(%ecx)

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	6c                   	insb   (%dx),%es:(%edi)
   1:	6f                   	outsl  %ds:(%esi),(%dx)
   2:	6e                   	outsb  %ds:(%esi),(%dx)
   3:	67 20 6c 6f          	and    %ch,0x6f(%si)
   7:	6e                   	outsb  %ds:(%esi),(%dx)
   8:	67 20 69 6e          	and    %ch,0x6e(%bx,%di)
   c:	74 00                	je     e <_init-0x80482c2>
   e:	73 74                	jae    84 <_init-0x804824c>
  10:	65 73 74             	gs jae 87 <_init-0x8048249>
  13:	2e 63 00             	arpl   %ax,%cs:(%eax)
  16:	75 6e                	jne    86 <_init-0x804824a>
  18:	73 69                	jae    83 <_init-0x804824d>
  1a:	67 6e                	outsb  %ds:(%si),(%dx)
  1c:	65 64 20 63 68       	gs and %ah,%fs:0x68(%ebx)
  21:	61                   	popa   
  22:	72 00                	jb     24 <_init-0x80482ac>
  24:	6d                   	insl   (%dx),%es:(%edi)
  25:	61                   	popa   
  26:	69 6e 00 6c 6f 6e 67 	imul   $0x676e6f6c,0x0(%esi),%ebp
  2d:	20 6c 6f 6e          	and    %ch,0x6e(%edi,%ebp,2)
  31:	67 20 75 6e          	and    %dh,0x6e(%di)
  35:	73 69                	jae    a0 <_init-0x8048230>
  37:	67 6e                	outsb  %ds:(%si),(%dx)
  39:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%ecx)
  3e:	74 00                	je     40 <_init-0x8048290>
  40:	2f                   	das    
  41:	68 6f 6d 65 2f       	push   $0x2f656d6f
  46:	64 61                	fs popa 
  48:	76 69                	jbe    b3 <_init-0x804821d>
  4a:	64 2f                	fs das 
  4c:	44                   	inc    %esp
  4d:	65 73 6b             	gs jae bb <_init-0x8048215>
  50:	74 6f                	je     c1 <_init-0x804820f>
  52:	70 2f                	jo     83 <_init-0x804824d>
  54:	35 32 33 73 2f       	xor    $0x2f733332,%eax
  59:	73 74                	jae    cf <_init-0x8048201>
  5b:	61                   	popa   
  5c:	63 6b 5f             	arpl   %bp,0x5f(%ebx)
  5f:	61                   	popa   
  60:	64 64 72 65          	fs fs jb c9 <_init-0x8048207>
  64:	73 73                	jae    d9 <_init-0x80481f7>
  66:	65 73 00             	gs jae 69 <_init-0x8048267>
  69:	73 68                	jae    d3 <_init-0x80481fd>
  6b:	6f                   	outsl  %ds:(%esi),(%dx)
  6c:	72 74                	jb     e2 <_init-0x80481ee>
  6e:	20 75 6e             	and    %dh,0x6e(%ebp)
  71:	73 69                	jae    dc <_init-0x80481f4>
  73:	67 6e                	outsb  %ds:(%si),(%dx)
  75:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%ecx)
  7a:	74 00                	je     7c <_init-0x8048254>
  7c:	47                   	inc    %edi
  7d:	4e                   	dec    %esi
  7e:	55                   	push   %ebp
  7f:	20 43 31             	and    %al,0x31(%ebx)
  82:	31 20                	xor    %esp,(%eax)
  84:	35 2e 34 2e 30       	xor    $0x302e342e,%eax
  89:	20 32                	and    %dh,(%edx)
  8b:	30 31                	xor    %dh,(%ecx)
  8d:	36 30 36             	xor    %dh,%ss:(%esi)
  90:	30 39                	xor    %bh,(%ecx)
  92:	20 2d 6d 33 32 20    	and    %ch,0x2032336d
  98:	2d 6d 74 75 6e       	sub    $0x6e75746d,%eax
  9d:	65 3d 67 65 6e 65    	gs cmp $0x656e6567,%eax
  a3:	72 69                	jb     10e <_init-0x80481c2>
  a5:	63 20                	arpl   %sp,(%eax)
  a7:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
  ac:	68 3d 69 36 38       	push   $0x3836693d
  b1:	36 20 2d 67 20 2d 66 	and    %ch,%ss:0x662d2067
  b8:	73 74                	jae    12e <_init-0x80481a2>
  ba:	61                   	popa   
  bb:	63 6b 2d             	arpl   %bp,0x2d(%ebx)
  be:	70 72                	jo     132 <_init-0x804819e>
  c0:	6f                   	outsl  %ds:(%esi),(%dx)
  c1:	74 65                	je     128 <_init-0x80481a8>
  c3:	63 74 6f 72          	arpl   %si,0x72(%edi,%ebp,2)
  c7:	2d 73 74 72 6f       	sub    $0x6f727473,%eax
  cc:	6e                   	outsb  %ds:(%esi),(%dx)
  cd:	67 00 73 68          	add    %dh,0x68(%bp,%di)
  d1:	6f                   	outsl  %ds:(%esi),(%dx)
  d2:	72 74                	jb     148 <_init-0x8048188>
  d4:	20 69 6e             	and    %ch,0x6e(%ecx)
  d7:	74 00                	je     d9 <_init-0x80481f7>
  d9:	73 69                	jae    144 <_init-0x804818c>
  db:	7a 65                	jp     142 <_init-0x804818e>
  dd:	74 79                	je     158 <_init-0x8048178>
  df:	70 65                	jo     146 <_init-0x804818a>
	...
